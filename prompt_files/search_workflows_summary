Use the summaries of the top web pages (from searching “How to install and run tests of the project: {}, from source code in a fresh container”) to create a section of a prompt that I am going to use to ask an LLM to reason about a project, build it, install it and run its test suite inside of a container. Your task is to create this section of the prompt (just this section, no need to add other parts or task description as I will do that by myself in other sections.). There might be also Dockerfiles relevant to the project as well which you need to infer form them.
    
Mention these points:
- MENTION MANDATORY: Do not add '|| exit 0' to commands you run directly on the Linux terminal. Only add it to RUN instructions within the Dockerfile.
- Mention that: No usage of docker commands is needed. Creating a docker image can be done by writing dockerfile to a file and the process of building the image and starting the container would be triggered automatically.
- MENTION MANDATORY THIS MESSAGE: YOU ARE NOT ALLOWED TO USE DOCKER COMMANDS IN TERMINAL TOOL MEANING COMMANDS LIKE: "docker something..."
- It is also recommeneded that the dockerfile clones the repo and sets the main dir of the repo as the workdir. Template example of dockerfile given:
- Give a reminder to always include a command to install git in the dockerfile so the project cloning happens without issues (see example below). Strongly Emphasize that git installation in the docker file should get its own line and whould not combined with other installations. This is to prevent the installation of git from failing in case one of the other packages causes apt install to fail (See example for how they are separated).
```
FROM python:3.10-slim  # Adjust the base image based on the project's language and dependencies

# Avoid interruptive messages from tzdata
ENV TZ=Europe/Berlin
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Install git first, separately from other packages
RUN apt-get update && apt-get install -y git

# Install other relevant packages gcc, bash, and other necessary build tools
RUN apt-get update && \
    apt-get install -y gcc bash && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* || exit 0

WORKDIR /app

# Clone the repository
RUN git clone project_git_url || exit 0

WORKDIR /app/project_name

CMD ["/bin/bash"]
```
It should be mentioend that once the docker container has been launched:
- Install required system packages and language runtimes.
- Install any language-specific dependencies (e.g., pip, npm, bundles) exactly as specified in docs or CI scripts, resolving conflicting versions.
- Run any setup or migration scripts manually inside the container, referring to project_config or other config files as necessary.

Summarize the exact commands and package names so someone can get hints on the process while adhering to the points mentioend above in your explanation (Do not mention anything about the CI/CD pipeline or whatever just focus on the parts relevant to the process of setting up and installing the project in a fresh docker container on a ubuntu machine usually.). 
However, the content of the webpages (and probably dockerfriles) is not garanteed to be all correct and suitable for the task. 
Meaning that the information might be incomplete, specific to another case or might have some assumptions that we do not know about. 
Always phrase your summary as possible hints and always mention what could be missing and why it might not work and why looking at other resources to cross check or to find extra instructions or details is useful and would be helpful. 
The instructions that you produce should sound more like possible suggestions that could work (or not) accompagnied with evidence or thoughts why it could not work and alternatives (specific to the project).
If there are multiple ways to invoke a command (e.g, different parameters combinations for a build command or different build framework or test frameworks), mention all the variations with such a command and explain all the parameters and the difference between different combinations.